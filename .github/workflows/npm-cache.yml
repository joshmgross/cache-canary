name: npm-cache

on: push

jobs:
  upload:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        cache: [test, stable]
    name: node-cache upload ${{ matrix.cache }} (${{ matrix.os }})
    steps:
    - uses: actions/checkout@v2

    - name: Upload Stable Cache
      uses: actions/cache@v1
      if: matrix.cache == 'stable'
      with:
        path: node/node_modules
        key: ${{ runner.os }}-node++-${{ matrix.cache }}-${{ hashFiles('**/package-lock.json') }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-node++-${{ matrix.cache }}-${{ hashFiles('**/package-lock.json') }}
          ${{ runner.os }}-node++-${{ matrix.cache }}

    - name: Upload Test Cache
      uses: actions/cache@v1.1.1 # Replace this version with version to test
      if: matrix.cache == 'test'
      with:
        path: node/node_modules
        key: ${{ runner.os }}-node++-${{ matrix.cache }}-${{ hashFiles('**/package-lock.json') }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-node++-${{ matrix.cache }}-${{ hashFiles('**/package-lock.json') }}
          ${{ runner.os }}-node++-${{ matrix.cache }}
    - run: npm install
      working-directory: ./node
    - run: npm run build
      working-directory: ./node
    - run: npm test
      working-directory: ./node

  restore:
    needs: upload
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        cache: [test, stable]
    name: node-cache restore ${{ matrix.cache }} (${{ matrix.os }})
    steps:
    - uses: actions/checkout@v2

    - uses: actions/cache@v1.1.1 # Always want to test restore with test version
      id: cache
      with:
        path: node/node_modules
        key: ${{ runner.os }}-node++-${{ matrix.cache }}-${{ hashFiles('**/package-lock.json') }}-${{ github.sha }}

    - name: Fail if cache not found
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        echo "Cache not found, upload failed"
        exit 1
    - run: npm install
      working-directory: ./node
    - run: npm run build
      working-directory: ./node
    - run: npm test
      working-directory: ./node
